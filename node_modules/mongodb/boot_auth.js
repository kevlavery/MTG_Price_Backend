var ReplSetManager = require('mongodb-topology-manager').ReplSet,
  f = require('util').format;

var rsOptions = ***REMOVED***
  server: ***REMOVED***
    keyFile: __dirname + '/test/functional/data/keyfile.txt',
    auth: null,
    replSet: 'rs'
  ***REMOVED***,
  client: ***REMOVED***
    replSet: 'rs'
  ***REMOVED***
***REMOVED***

// Set up the nodes
var nodes = [***REMOVED***
  options: ***REMOVED***
    bind_ip: 'localhost', port: 31000,
    dbpath: f('%s/../db/31000', __dirname),
  ***REMOVED***
***REMOVED***, ***REMOVED***
  options: ***REMOVED***
    bind_ip: 'localhost', port: 31001,
    dbpath: f('%s/../db/31001', __dirname),
  ***REMOVED***
***REMOVED***, ***REMOVED***
  options: ***REMOVED***
    bind_ip: 'localhost', port: 31002,
    dbpath: f('%s/../db/31002', __dirname),
  ***REMOVED***
***REMOVED***]

// Merge in any node start up options
for(var i = 0; i < nodes.length; i++) ***REMOVED***
  for(var name in rsOptions.server) ***REMOVED***
    nodes[i].options[name] = rsOptions.server[name];
  ***REMOVED***
***REMOVED***

// Create a manager
var replicasetManager = new ReplSetManager('mongod', nodes, rsOptions.client);
// Purge the set
replicasetManager.purge().then(function() ***REMOVED***
  // Start the server
  replicasetManager.start().then(function() ***REMOVED***
    process.exit(0);
  ***REMOVED***).catch(function(e) ***REMOVED***
    console.log("====== ")
    console.dir(e)
    // // console.dir(e);
  ***REMOVED***);
***REMOVED***);
