/** 
 * JSON Schema link handler
 * Copyright (c) 2007 Kris Zyp SitePen (www.sitepen.com)
 * Licensed under the MIT (MIT-LICENSE.txt) license.
 */
(function (root, factory) ***REMOVED***
    if (typeof define === 'function' && define.amd) ***REMOVED***
        // AMD. Register as an anonymous module.
        define([], function () ***REMOVED***
            return factory();
        ***REMOVED***);
    ***REMOVED*** else if (typeof module === 'object' && module.exports) ***REMOVED***
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like environments that support module.exports,
        // like Node.
        module.exports = factory();
    ***REMOVED*** else ***REMOVED***
        // Browser globals
        root.jsonSchemaLinks = factory();
    ***REMOVED***
***REMOVED***(this, function () ***REMOVED***// setup primitive classes to be JSON Schema types
var exports = ***REMOVED******REMOVED***;
exports.cacheLinks = true;
exports.getLink = function(relation, instance, schema)***REMOVED***
	// gets the URI of the link for the given relation based on the instance and schema
	// for example:
	// getLink(
	// 		"brother", 
	// 		***REMOVED***"brother_id":33***REMOVED***, 
	// 		***REMOVED***links:[***REMOVED***rel:"brother", href:"Brother/***REMOVED***brother_id***REMOVED***"***REMOVED***]***REMOVED***) ->
	//	"Brother/33"
	var links = schema.__linkTemplates; 
	if(!links)***REMOVED***
		links = ***REMOVED******REMOVED***;
		var schemaLinks = schema.links;
		if(schemaLinks && schemaLinks instanceof Array)***REMOVED***
			schemaLinks.forEach(function(link)***REMOVED***
	/*			// TODO: allow for multiple same-name relations
				if(links[link.rel])***REMOVED***
					if(!(links[link.rel] instanceof Array))***REMOVED***
						links[link.rel] = [links[link.rel]];
					***REMOVED***
				***REMOVED****/
				links[link.rel] = link.href;
			***REMOVED***);
		***REMOVED***
		if(exports.cacheLinks)***REMOVED***
			schema.__linkTemplates = links;
		***REMOVED***
	***REMOVED***
	var linkTemplate = links[relation];
	return linkTemplate && exports.substitute(linkTemplate, instance);
***REMOVED***;

exports.substitute = function(linkTemplate, instance)***REMOVED***
	return linkTemplate.replace(/\***REMOVED***([^\***REMOVED***]*)\***REMOVED***/g, function(t, property)***REMOVED***
			var value = instance[decodeURIComponent(property)];
			if(value instanceof Array)***REMOVED***
				// the value is an array, it should produce a URI like /Table/(4,5,8) and store.get() should handle that as an array of values
				return '(' + value.join(',') + ')';
			***REMOVED***
			return value;
		***REMOVED***);
***REMOVED***;
return exports;
***REMOVED***));