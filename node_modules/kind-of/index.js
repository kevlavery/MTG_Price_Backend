var isBuffer = require('is-buffer');
var toString = Object.prototype.toString;

/**
 * Get the native `typeof` a value.
 *
 * @param  ***REMOVED*******REMOVED*** `val`
 * @return ***REMOVED*******REMOVED*** Native javascript type
 */

module.exports = function kindOf(val) ***REMOVED***
  // primitivies
  if (typeof val === 'undefined') ***REMOVED***
    return 'undefined';
  ***REMOVED***
  if (val === null) ***REMOVED***
    return 'null';
  ***REMOVED***
  if (val === true || val === false || val instanceof Boolean) ***REMOVED***
    return 'boolean';
  ***REMOVED***
  if (typeof val === 'string' || val instanceof String) ***REMOVED***
    return 'string';
  ***REMOVED***
  if (typeof val === 'number' || val instanceof Number) ***REMOVED***
    return 'number';
  ***REMOVED***

  // functions
  if (typeof val === 'function' || val instanceof Function) ***REMOVED***
    return 'function';
  ***REMOVED***

  // array
  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) ***REMOVED***
    return 'array';
  ***REMOVED***

  // check for instances of RegExp and Date before calling `toString`
  if (val instanceof RegExp) ***REMOVED***
    return 'regexp';
  ***REMOVED***
  if (val instanceof Date) ***REMOVED***
    return 'date';
  ***REMOVED***

  // other objects
  var type = toString.call(val);

  if (type === '[object RegExp]') ***REMOVED***
    return 'regexp';
  ***REMOVED***
  if (type === '[object Date]') ***REMOVED***
    return 'date';
  ***REMOVED***
  if (type === '[object Arguments]') ***REMOVED***
    return 'arguments';
  ***REMOVED***
  if (type === '[object Error]') ***REMOVED***
    return 'error';
  ***REMOVED***

  // buffer
  if (isBuffer(val)) ***REMOVED***
    return 'buffer';
  ***REMOVED***

  // es6: Map, WeakMap, Set, WeakSet
  if (type === '[object Set]') ***REMOVED***
    return 'set';
  ***REMOVED***
  if (type === '[object WeakSet]') ***REMOVED***
    return 'weakset';
  ***REMOVED***
  if (type === '[object Map]') ***REMOVED***
    return 'map';
  ***REMOVED***
  if (type === '[object WeakMap]') ***REMOVED***
    return 'weakmap';
  ***REMOVED***
  if (type === '[object Symbol]') ***REMOVED***
    return 'symbol';
  ***REMOVED***

  // typed arrays
  if (type === '[object Int8Array]') ***REMOVED***
    return 'int8array';
  ***REMOVED***
  if (type === '[object Uint8Array]') ***REMOVED***
    return 'uint8array';
  ***REMOVED***
  if (type === '[object Uint8ClampedArray]') ***REMOVED***
    return 'uint8clampedarray';
  ***REMOVED***
  if (type === '[object Int16Array]') ***REMOVED***
    return 'int16array';
  ***REMOVED***
  if (type === '[object Uint16Array]') ***REMOVED***
    return 'uint16array';
  ***REMOVED***
  if (type === '[object Int32Array]') ***REMOVED***
    return 'int32array';
  ***REMOVED***
  if (type === '[object Uint32Array]') ***REMOVED***
    return 'uint32array';
  ***REMOVED***
  if (type === '[object Float32Array]') ***REMOVED***
    return 'float32array';
  ***REMOVED***
  if (type === '[object Float64Array]') ***REMOVED***
    return 'float64array';
  ***REMOVED***

  // must be a plain object
  return 'object';
***REMOVED***;
