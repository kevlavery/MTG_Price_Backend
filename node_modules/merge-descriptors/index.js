/*!
 * merge-descriptors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = merge

/**
 * Module variables.
 * @private
 */

var hasOwnProperty = Object.prototype.hasOwnProperty

/**
 * Merge the property descriptors of `src` into `dest`
 *
 * @param ***REMOVED***object***REMOVED*** dest Object to add descriptors to
 * @param ***REMOVED***object***REMOVED*** src Object to clone descriptors from
 * @param ***REMOVED***boolean***REMOVED*** [redefine=true] Redefine `dest` properties with `src` properties
 * @returns ***REMOVED***object***REMOVED*** Reference to dest
 * @public
 */

function merge(dest, src, redefine) ***REMOVED***
  if (!dest) ***REMOVED***
    throw new TypeError('argument dest is required')
  ***REMOVED***

  if (!src) ***REMOVED***
    throw new TypeError('argument src is required')
  ***REMOVED***

  if (redefine === undefined) ***REMOVED***
    // Default to true
    redefine = true
  ***REMOVED***

  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) ***REMOVED***
    if (!redefine && hasOwnProperty.call(dest, name)) ***REMOVED***
      // Skip desriptor
      return
    ***REMOVED***

    // Copy descriptor
    var descriptor = Object.getOwnPropertyDescriptor(src, name)
    Object.defineProperty(dest, name, descriptor)
  ***REMOVED***)

  return dest
***REMOVED***
