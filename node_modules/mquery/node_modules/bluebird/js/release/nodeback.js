"use strict";
var util = require("./util");
var maybeWrapAsError = util.maybeWrapAsError;
var errors = require("./errors");
var OperationalError = errors.OperationalError;
var es5 = require("./es5");

function isUntypedError(obj) ***REMOVED***
    return obj instanceof Error &&
        es5.getPrototypeOf(obj) === Error.prototype;
***REMOVED***

var rErrorKey = /^(?:name|message|stack|cause)$/;
function wrapAsOperationalError(obj) ***REMOVED***
    var ret;
    if (isUntypedError(obj)) ***REMOVED***
        ret = new OperationalError(obj);
        ret.name = obj.name;
        ret.message = obj.message;
        ret.stack = obj.stack;
        var keys = es5.keys(obj);
        for (var i = 0; i < keys.length; ++i) ***REMOVED***
            var key = keys[i];
            if (!rErrorKey.test(key)) ***REMOVED***
                ret[key] = obj[key];
            ***REMOVED***
        ***REMOVED***
        return ret;
    ***REMOVED***
    util.markAsOriginatingFromRejection(obj);
    return obj;
***REMOVED***

function nodebackForPromise(promise, multiArgs) ***REMOVED***
    return function(err, value) ***REMOVED***
        if (promise === null) return;
        if (err) ***REMOVED***
            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        ***REMOVED*** else if (!multiArgs) ***REMOVED***
            promise._fulfill(value);
        ***REMOVED*** else ***REMOVED***
            var $_len = arguments.length;var args = new Array(Math.max($_len - 1, 0)); for(var $_i = 1; $_i < $_len; ++$_i) ***REMOVED***args[$_i - 1] = arguments[$_i];***REMOVED***;
            promise._fulfill(args);
        ***REMOVED***
        promise = null;
    ***REMOVED***;
***REMOVED***

module.exports = nodebackForPromise;
