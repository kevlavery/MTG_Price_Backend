import ***REMOVED***isEmpty, isFunction***REMOVED*** from '../utils';

export default function(instance) ***REMOVED***
  instance.registerHelper('if', function(conditional, options) ***REMOVED***
    if (isFunction(conditional)) ***REMOVED*** conditional = conditional.call(this); ***REMOVED***

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) ***REMOVED***
      return options.inverse(this);
    ***REMOVED*** else ***REMOVED***
      return options.fn(this);
    ***REMOVED***
  ***REMOVED***);

  instance.registerHelper('unless', function(conditional, options) ***REMOVED***
    return instance.helpers['if'].call(this, conditional, ***REMOVED***fn: options.inverse, inverse: options.fn, hash: options.hash***REMOVED***);
  ***REMOVED***);
***REMOVED***
