import ***REMOVED***indexOf***REMOVED*** from './utils';

let logger = ***REMOVED***
  methodMap: ['debug', 'info', 'warn', 'error'],
  level: 'info',

  // Maps a given level value to the `methodMap` indexes above.
  lookupLevel: function(level) ***REMOVED***
    if (typeof level === 'string') ***REMOVED***
      let levelMap = indexOf(logger.methodMap, level.toLowerCase());
      if (levelMap >= 0) ***REMOVED***
        level = levelMap;
      ***REMOVED*** else ***REMOVED***
        level = parseInt(level, 10);
      ***REMOVED***
    ***REMOVED***

    return level;
  ***REMOVED***,

  // Can be overridden in the host environment
  log: function(level, ...message) ***REMOVED***
    level = logger.lookupLevel(level);

    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) ***REMOVED***
      let method = logger.methodMap[level];
      if (!console[method]) ***REMOVED***   // eslint-disable-line no-console
        method = 'log';
      ***REMOVED***
      console[method](...message);    // eslint-disable-line no-console
    ***REMOVED***
  ***REMOVED***
***REMOVED***;

export default logger;
