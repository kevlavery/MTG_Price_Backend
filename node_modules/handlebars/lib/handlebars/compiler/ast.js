let AST = ***REMOVED***
  // Public API used to evaluate derived attributes regarding AST nodes
  helpers: ***REMOVED***
    // a mustache is definitely a helper if:
    // * it is an eligible helper, and
    // * it has at least one parameter or hash segment
    helperExpression: function(node) ***REMOVED***
      return (node.type === 'SubExpression')
          || ((node.type === 'MustacheStatement' || node.type === 'BlockStatement')
            && !!((node.params && node.params.length) || node.hash));
    ***REMOVED***,

    scopedId: function(path) ***REMOVED***
      return (/^\.|this\b/).test(path.original);
    ***REMOVED***,

    // an ID is simple if it only has one part, and that part is not
    // `..` or `this`.
    simpleId: function(path) ***REMOVED***
      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;
    ***REMOVED***
  ***REMOVED***
***REMOVED***;


// Must be exported as an object rather than the root of the module as the jison lexer
// must modify the object to operate properly.
export default AST;
