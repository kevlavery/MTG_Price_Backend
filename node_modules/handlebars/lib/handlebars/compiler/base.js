import parser from './parser';
import WhitespaceControl from './whitespace-control';
import * as Helpers from './helpers';
import ***REMOVED*** extend ***REMOVED*** from '../utils';

export ***REMOVED*** parser ***REMOVED***;

let yy = ***REMOVED******REMOVED***;
extend(yy, Helpers);

export function parse(input, options) ***REMOVED***
  // Just return if an already-compiled AST was passed in.
  if (input.type === 'Program') ***REMOVED*** return input; ***REMOVED***

  parser.yy = yy;

  // Altering the shared object here, but this is ok as parser is a sync operation
  yy.locInfo = function(locInfo) ***REMOVED***
    return new yy.SourceLocation(options && options.srcName, locInfo);
  ***REMOVED***;

  let strip = new WhitespaceControl(options);
  return strip.accept(parser.parse(input));
***REMOVED***
