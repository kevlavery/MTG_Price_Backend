'use strict';

var schema = ***REMOVED***
  additionalItems: subschema('additionalItems'),
  items: subschema('items'),
  contains: subschema('contains'),
  additionalProperties: subschema('additionalProperties'),
  propertyNames: subschema('propertyNames'),
  not: subschema('not'),
  allOf: [
    subschema('allOf_0'),
    subschema('allOf_1'),
    ***REMOVED***
      items: [
        subschema('items_0'),
        subschema('items_1'),
      ]
    ***REMOVED***
  ],
  anyOf: [
    subschema('anyOf_0'),
    subschema('anyOf_1'),
  ],
  oneOf: [
    subschema('oneOf_0'),
    subschema('oneOf_1'),
  ],
  definitions: ***REMOVED***
    foo: subschema('definitions_foo'),
    bar: subschema('definitions_bar'),
  ***REMOVED***,
  properties: ***REMOVED***
    foo: subschema('properties_foo'),
    bar: subschema('properties_bar'),
  ***REMOVED***,
  patternProperties: ***REMOVED***
    foo: subschema('patternProperties_foo'),
    bar: subschema('patternProperties_bar'),
  ***REMOVED***,
  dependencies: ***REMOVED***
    foo: subschema('dependencies_foo'),
    bar: subschema('dependencies_bar'),
  ***REMOVED***,
  required: ['foo', 'bar']
***REMOVED***;


function subschema(keyword) ***REMOVED***
  var sch = ***REMOVED***
    properties: ***REMOVED******REMOVED***,
    additionalProperties: false,
    additionalItems: false,
    anyOf: [
      ***REMOVED***format: 'email'***REMOVED***,
      ***REMOVED***format: 'hostname'***REMOVED***
    ]
  ***REMOVED***;
  sch.properties['foo_' + keyword] = ***REMOVED***title: 'foo'***REMOVED***;
  sch.properties['bar_' + keyword] = ***REMOVED***title: 'bar'***REMOVED***;
  return sch;
***REMOVED***


module.exports = ***REMOVED***
  schema: schema,

  // schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex
  expectedCalls: [[schema, '', schema, undefined, undefined, undefined, undefined]]
    .concat(expectedCalls('additionalItems'))
    .concat(expectedCalls('items'))
    .concat(expectedCalls('contains'))
    .concat(expectedCalls('additionalProperties'))
    .concat(expectedCalls('propertyNames'))
    .concat(expectedCalls('not'))
    .concat(expectedCallsChild('allOf', 0))
    .concat(expectedCallsChild('allOf', 1))
    .concat([
      [schema.allOf[2], '/allOf/2', schema, '', 'allOf', schema, 2],
      [schema.allOf[2].items[0], '/allOf/2/items/0', schema, '/allOf/2', 'items', schema.allOf[2], 0],
      [schema.allOf[2].items[0].properties.foo_items_0, '/allOf/2/items/0/properties/foo_items_0', schema, '/allOf/2/items/0', 'properties', schema.allOf[2].items[0], 'foo_items_0'],
      [schema.allOf[2].items[0].properties.bar_items_0, '/allOf/2/items/0/properties/bar_items_0', schema, '/allOf/2/items/0', 'properties', schema.allOf[2].items[0], 'bar_items_0'],
      [schema.allOf[2].items[0].anyOf[0], '/allOf/2/items/0/anyOf/0', schema, '/allOf/2/items/0', 'anyOf', schema.allOf[2].items[0], 0],
      [schema.allOf[2].items[0].anyOf[1], '/allOf/2/items/0/anyOf/1', schema, '/allOf/2/items/0', 'anyOf', schema.allOf[2].items[0], 1],

      [schema.allOf[2].items[1], '/allOf/2/items/1', schema, '/allOf/2', 'items', schema.allOf[2], 1],
      [schema.allOf[2].items[1].properties.foo_items_1, '/allOf/2/items/1/properties/foo_items_1', schema, '/allOf/2/items/1', 'properties', schema.allOf[2].items[1], 'foo_items_1'],
      [schema.allOf[2].items[1].properties.bar_items_1, '/allOf/2/items/1/properties/bar_items_1', schema, '/allOf/2/items/1', 'properties', schema.allOf[2].items[1], 'bar_items_1'],
      [schema.allOf[2].items[1].anyOf[0], '/allOf/2/items/1/anyOf/0', schema, '/allOf/2/items/1', 'anyOf', schema.allOf[2].items[1], 0],
      [schema.allOf[2].items[1].anyOf[1], '/allOf/2/items/1/anyOf/1', schema, '/allOf/2/items/1', 'anyOf', schema.allOf[2].items[1], 1]
    ])
    .concat(expectedCallsChild('anyOf', 0))
    .concat(expectedCallsChild('anyOf', 1))
    .concat(expectedCallsChild('oneOf', 0))
    .concat(expectedCallsChild('oneOf', 1))
    .concat(expectedCallsChild('definitions', 'foo'))
    .concat(expectedCallsChild('definitions', 'bar'))
    .concat(expectedCallsChild('properties', 'foo'))
    .concat(expectedCallsChild('properties', 'bar'))
    .concat(expectedCallsChild('patternProperties', 'foo'))
    .concat(expectedCallsChild('patternProperties', 'bar'))
    .concat(expectedCallsChild('dependencies', 'foo'))
    .concat(expectedCallsChild('dependencies', 'bar'))
***REMOVED***;


function expectedCalls(keyword) ***REMOVED***
  return [
    [schema[keyword], `/$***REMOVED***keyword***REMOVED***`, schema, '', keyword, schema, undefined],
    [schema[keyword].properties[`foo_$***REMOVED***keyword***REMOVED***`], `/$***REMOVED***keyword***REMOVED***/properties/foo_$***REMOVED***keyword***REMOVED***`, schema, `/$***REMOVED***keyword***REMOVED***`, 'properties', schema[keyword], `foo_$***REMOVED***keyword***REMOVED***`],
    [schema[keyword].properties[`bar_$***REMOVED***keyword***REMOVED***`], `/$***REMOVED***keyword***REMOVED***/properties/bar_$***REMOVED***keyword***REMOVED***`, schema, `/$***REMOVED***keyword***REMOVED***`, 'properties', schema[keyword], `bar_$***REMOVED***keyword***REMOVED***`],
    [schema[keyword].anyOf[0], `/$***REMOVED***keyword***REMOVED***/anyOf/0`, schema, `/$***REMOVED***keyword***REMOVED***`, 'anyOf', schema[keyword], 0],
    [schema[keyword].anyOf[1], `/$***REMOVED***keyword***REMOVED***/anyOf/1`, schema, `/$***REMOVED***keyword***REMOVED***`, 'anyOf', schema[keyword], 1]
  ];
***REMOVED***


function expectedCallsChild(keyword, i) ***REMOVED***
  return [
    [schema[keyword][i], `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***`, schema, '', keyword, schema, i],
    [schema[keyword][i].properties[`foo_$***REMOVED***keyword***REMOVED***_$***REMOVED***i***REMOVED***`], `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***/properties/foo_$***REMOVED***keyword***REMOVED***_$***REMOVED***i***REMOVED***`, schema, `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***`, 'properties', schema[keyword][i], `foo_$***REMOVED***keyword***REMOVED***_$***REMOVED***i***REMOVED***`],
    [schema[keyword][i].properties[`bar_$***REMOVED***keyword***REMOVED***_$***REMOVED***i***REMOVED***`], `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***/properties/bar_$***REMOVED***keyword***REMOVED***_$***REMOVED***i***REMOVED***`, schema, `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***`, 'properties', schema[keyword][i], `bar_$***REMOVED***keyword***REMOVED***_$***REMOVED***i***REMOVED***`],
    [schema[keyword][i].anyOf[0], `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***/anyOf/0`, schema, `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***`, 'anyOf', schema[keyword][i], 0],
    [schema[keyword][i].anyOf[1], `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***/anyOf/1`, schema, `/$***REMOVED***keyword***REMOVED***/$***REMOVED***i***REMOVED***`, 'anyOf', schema[keyword][i], 1]
  ];
***REMOVED***
