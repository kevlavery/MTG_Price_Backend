
var assert = require('assert');
var mongoose = require('../../lib');
var Schema = mongoose.Schema;
var ObjectId = mongoose.Types.ObjectId;

/**
 * Connect to the db
 */

var dbname = 'testing_populateAdInfinitum_' + require('../../lib/utils').random();
mongoose.connect('localhost', dbname);
mongoose.connection.on('error', function() ***REMOVED***
  console.error('connection error', arguments);
***REMOVED***);

/**
 * Schemas
 */

var user = new Schema(***REMOVED***
  name: String,
  friends: [***REMOVED***
    type: Schema.ObjectId,
    ref: 'User'
  ***REMOVED***]
***REMOVED***);
var User = mongoose.model('User', user);

var blogpost = Schema(***REMOVED***
  title: String,
  tags: [String],
  author: ***REMOVED***
    type: Schema.ObjectId,
    ref: 'User'
  ***REMOVED***
***REMOVED***);
var BlogPost = mongoose.model('BlogPost', blogpost);

/**
 * example
 */

mongoose.connection.on('open', function() ***REMOVED***
  /**
   * Generate data
   */

  var userIds = [new ObjectId, new ObjectId, new ObjectId, new ObjectId];
  var users = [];

  users.push(***REMOVED***
    _id: userIds[0],
    name: 'mary',
    friends: [userIds[1], userIds[2], userIds[3]]
  ***REMOVED***);
  users.push(***REMOVED***
    _id: userIds[1],
    name: 'bob',
    friends: [userIds[0], userIds[2], userIds[3]]
  ***REMOVED***);
  users.push(***REMOVED***
    _id: userIds[2],
    name: 'joe',
    friends: [userIds[0], userIds[1], userIds[3]]
  ***REMOVED***);
  users.push(***REMOVED***
    _id: userIds[3],
    name: 'sally',
    friends: [userIds[0], userIds[1], userIds[2]]
  ***REMOVED***);

  User.create(users, function(err) ***REMOVED***
    assert.ifError(err);

    var blogposts = [];
    blogposts.push(***REMOVED***
      title: 'blog 1',
      tags: ['fun', 'cool'],
      author: userIds[3]
    ***REMOVED***);
    blogposts.push(***REMOVED***
      title: 'blog 2',
      tags: ['cool'],
      author: userIds[1]
    ***REMOVED***);
    blogposts.push(***REMOVED***
      title: 'blog 3',
      tags: ['fun', 'odd'],
      author: userIds[2]
    ***REMOVED***);

    BlogPost.create(blogposts, function(err) ***REMOVED***
      assert.ifError(err);

      /**
       * Population
       */

      BlogPost
        .find(***REMOVED***tags: 'fun'***REMOVED***)
        .lean()
        .populate('author')
        .exec(function(err, docs) ***REMOVED***
          assert.ifError(err);

          /**
         * Populate the populated documents
         */

          var opts = ***REMOVED***
            path: 'author.friends',
            select: 'name',
            options: ***REMOVED***limit: 2***REMOVED***
          ***REMOVED***;

          BlogPost.populate(docs, opts, function(err, docs) ***REMOVED***
            assert.ifError(err);
            console.log('populated');
            var s = require('util').inspect(docs, ***REMOVED***depth: null, colors: true***REMOVED***);
            console.log(s);
            done();
          ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);

function done(err) ***REMOVED***
  if (err) console.error(err.stack);
  mongoose.connection.db.dropDatabase(function() ***REMOVED***
    mongoose.connection.close();
  ***REMOVED***);
***REMOVED***
