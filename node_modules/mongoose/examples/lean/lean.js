
// import async to make control flow simplier
var async = require('async');

// import the rest of the normal stuff
var mongoose = require('../../lib');

require('./person.js')();

var Person = mongoose.model('Person');

// define some dummy data
var data = [
  ***REMOVED***
    name: 'bill',
    age: 25,
    birthday: new Date().setFullYear((new Date().getFullYear() - 25)),
    gender: 'Male',
    likes: ['movies', 'games', 'dogs']
  ***REMOVED***,
  ***REMOVED***
    name: 'mary',
    age: 30,
    birthday: new Date().setFullYear((new Date().getFullYear() - 30)),
    gender: 'Female',
    likes: ['movies', 'birds', 'cats']
  ***REMOVED***,
  ***REMOVED***
    name: 'bob',
    age: 21,
    birthday: new Date().setFullYear((new Date().getFullYear() - 21)),
    gender: 'Male',
    likes: ['tv', 'games', 'rabbits']
  ***REMOVED***,
  ***REMOVED***
    name: 'lilly',
    age: 26,
    birthday: new Date().setFullYear((new Date().getFullYear() - 26)),
    gender: 'Female',
    likes: ['books', 'cats', 'dogs']
  ***REMOVED***,
  ***REMOVED***
    name: 'alucard',
    age: 1000,
    birthday: new Date().setFullYear((new Date().getFullYear() - 1000)),
    gender: 'Male',
    likes: ['glasses', 'wine', 'the night']
  ***REMOVED***
];


mongoose.connect('mongodb://localhost/persons', function(err) ***REMOVED***
  if (err) throw err;

  // create all of the dummy people
  async.each(data, function(item, cb) ***REMOVED***
    Person.create(item, cb);
  ***REMOVED***, function(err) ***REMOVED***
    if (err) ***REMOVED***
      // handle error
    ***REMOVED***

    // lean queries return just plain javascript objects, not
    // MongooseDocuments. This makes them good for high performance read
    // situations

    // when using .lean() the default is true, but you can explicitly set the
    // value by passing in a boolean value. IE. .lean(false)
    var q = Person.find(***REMOVED***age: ***REMOVED***$lt: 1000***REMOVED******REMOVED***).sort('age').limit(2).lean();
    q.exec(function(err, results) ***REMOVED***
      if (err) throw err;
      console.log('Are the results MongooseDocuments?: %s', results[0] instanceof mongoose.Document);

      console.log(results);
      cleanup();
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);

function cleanup() ***REMOVED***
  Person.remove(function() ***REMOVED***
    mongoose.disconnect();
  ***REMOVED***);
***REMOVED***
