'use strict';

Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);

exports.default = function (coll, limit, iteratee, callback) ***REMOVED***
    callback = callback || _noop2.default;
    var _iteratee = (0, _wrapAsync2.default)(iteratee);
    (0, _mapLimit2.default)(coll, limit, function (val, callback) ***REMOVED***
        _iteratee(val, function (err, key) ***REMOVED***
            if (err) return callback(err);
            return callback(null, ***REMOVED*** key: key, val: val ***REMOVED***);
        ***REMOVED***);
    ***REMOVED***, function (err, mapResults) ***REMOVED***
        var result = ***REMOVED******REMOVED***;
        // from MDN, handle object having an `hasOwnProperty` prop
        var hasOwnProperty = Object.prototype.hasOwnProperty;

        for (var i = 0; i < mapResults.length; i++) ***REMOVED***
            if (mapResults[i]) ***REMOVED***
                var key = mapResults[i].key;
                var val = mapResults[i].val;

                if (hasOwnProperty.call(result, key)) ***REMOVED***
                    result[key].push(val);
                ***REMOVED*** else ***REMOVED***
                    result[key] = [val];
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***

        return callback(err, result);
    ***REMOVED***);
***REMOVED***;

var _noop = require('lodash/noop');

var _noop2 = _interopRequireDefault(_noop);

var _mapLimit = require('./mapLimit');

var _mapLimit2 = _interopRequireDefault(_mapLimit);

var _wrapAsync = require('./internal/wrapAsync');

var _wrapAsync2 = _interopRequireDefault(_wrapAsync);

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

;
/**
 * The same as [`groupBy`]***REMOVED***@link module:Collections.groupBy***REMOVED*** but runs a maximum of `limit` async operations at a time.
 *
 * @name groupByLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.groupBy]***REMOVED***@link module:Collections.groupBy***REMOVED***
 * @category Collection
 * @param ***REMOVED***Array|Iterable|Object***REMOVED*** coll - A collection to iterate over.
 * @param ***REMOVED***number***REMOVED*** limit - The maximum number of async operations at a time.
 * @param ***REMOVED***AsyncFunction***REMOVED*** iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param ***REMOVED***Function***REMOVED*** [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 */
module.exports = exports['default'];