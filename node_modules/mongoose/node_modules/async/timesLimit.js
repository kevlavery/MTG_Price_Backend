'use strict';

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);
exports.default = timeLimit;

var _mapLimit = require('./mapLimit');

var _mapLimit2 = _interopRequireDefault(_mapLimit);

var _baseRange = require('lodash/_baseRange');

var _baseRange2 = _interopRequireDefault(_baseRange);

var _wrapAsync = require('./internal/wrapAsync');

var _wrapAsync2 = _interopRequireDefault(_wrapAsync);

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

/**
 * The same as [times]***REMOVED***@link module:ControlFlow.times***REMOVED*** but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name timesLimit
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.times]***REMOVED***@link module:ControlFlow.times***REMOVED***
 * @category Control Flow
 * @param ***REMOVED***number***REMOVED*** count - The number of times to run the function.
 * @param ***REMOVED***number***REMOVED*** limit - The maximum number of async operations at a time.
 * @param ***REMOVED***AsyncFunction***REMOVED*** iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param ***REMOVED***Function***REMOVED*** callback - see [async.map]***REMOVED***@link module:Collections.map***REMOVED***.
 */
function timeLimit(count, limit, iteratee, callback) ***REMOVED***
  var _iteratee = (0, _wrapAsync2.default)(iteratee);
  (0, _mapLimit2.default)((0, _baseRange2.default)(0, count, 1), limit, _iteratee, callback);
***REMOVED***
module.exports = exports['default'];