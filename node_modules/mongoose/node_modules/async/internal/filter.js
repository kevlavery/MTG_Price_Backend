'use strict';

Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.default = _filter;

var _arrayMap = require('lodash/_arrayMap');

var _arrayMap2 = _interopRequireDefault(_arrayMap);

var _isArrayLike = require('lodash/isArrayLike');

var _isArrayLike2 = _interopRequireDefault(_isArrayLike);

var _baseProperty = require('lodash/_baseProperty');

var _baseProperty2 = _interopRequireDefault(_baseProperty);

var _noop = require('lodash/noop');

var _noop2 = _interopRequireDefault(_noop);

var _wrapAsync = require('./wrapAsync');

var _wrapAsync2 = _interopRequireDefault(_wrapAsync);

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

function filterArray(eachfn, arr, iteratee, callback) ***REMOVED***
    var truthValues = new Array(arr.length);
    eachfn(arr, function (x, index, callback) ***REMOVED***
        iteratee(x, function (err, v) ***REMOVED***
            truthValues[index] = !!v;
            callback(err);
        ***REMOVED***);
    ***REMOVED***, function (err) ***REMOVED***
        if (err) return callback(err);
        var results = [];
        for (var i = 0; i < arr.length; i++) ***REMOVED***
            if (truthValues[i]) results.push(arr[i]);
        ***REMOVED***
        callback(null, results);
    ***REMOVED***);
***REMOVED***

function filterGeneric(eachfn, coll, iteratee, callback) ***REMOVED***
    var results = [];
    eachfn(coll, function (x, index, callback) ***REMOVED***
        iteratee(x, function (err, v) ***REMOVED***
            if (err) ***REMOVED***
                callback(err);
            ***REMOVED*** else ***REMOVED***
                if (v) ***REMOVED***
                    results.push(***REMOVED*** index: index, value: x ***REMOVED***);
                ***REMOVED***
                callback();
            ***REMOVED***
        ***REMOVED***);
    ***REMOVED***, function (err) ***REMOVED***
        if (err) ***REMOVED***
            callback(err);
        ***REMOVED*** else ***REMOVED***
            callback(null, (0, _arrayMap2.default)(results.sort(function (a, b) ***REMOVED***
                return a.index - b.index;
            ***REMOVED***), (0, _baseProperty2.default)('value')));
        ***REMOVED***
    ***REMOVED***);
***REMOVED***

function _filter(eachfn, coll, iteratee, callback) ***REMOVED***
    var filter = (0, _isArrayLike2.default)(coll) ? filterArray : filterGeneric;
    filter(eachfn, coll, (0, _wrapAsync2.default)(iteratee), callback || _noop2.default);
***REMOVED***
module.exports = exports['default'];