'use strict';

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);

var _applyEach = require('./internal/applyEach');

var _applyEach2 = _interopRequireDefault(_applyEach);

var _mapSeries = require('./mapSeries');

var _mapSeries2 = _interopRequireDefault(_mapSeries);

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

/**
 * The same as [`applyEach`]***REMOVED***@link module:ControlFlow.applyEach***REMOVED*** but runs only a single async operation at a time.
 *
 * @name applyEachSeries
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.applyEach]***REMOVED***@link module:ControlFlow.applyEach***REMOVED***
 * @category Control Flow
 * @param ***REMOVED***Array|Iterable|Object***REMOVED*** fns - A collection of ***REMOVED***@link AsyncFunction***REMOVED***s to all
 * call with the same arguments
 * @param ***REMOVED***...****REMOVED*** [args] - any number of separate arguments to pass to the
 * function.
 * @param ***REMOVED***Function***REMOVED*** [callback] - the final argument should be the callback,
 * called when all functions have completed processing.
 * @returns ***REMOVED***Function***REMOVED*** - If only the first argument is provided, it will return
 * a function which lets you pass in the arguments as if it were a single
 * function call.
 */
exports.default = (0, _applyEach2.default)(_mapSeries2.default);
module.exports = exports['default'];