'use strict';

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);

var _doLimit = require('./internal/doLimit');

var _doLimit2 = _interopRequireDefault(_doLimit);

var _groupByLimit = require('./groupByLimit');

var _groupByLimit2 = _interopRequireDefault(_groupByLimit);

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

/**
 * The same as [`groupBy`]***REMOVED***@link module:Collections.groupBy***REMOVED*** but runs only a single async operation at a time.
 *
 * @name groupBySeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.groupBy]***REMOVED***@link module:Collections.groupBy***REMOVED***
 * @category Collection
 * @param ***REMOVED***Array|Iterable|Object***REMOVED*** coll - A collection to iterate over.
 * @param ***REMOVED***number***REMOVED*** limit - The maximum number of async operations at a time.
 * @param ***REMOVED***AsyncFunction***REMOVED*** iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param ***REMOVED***Function***REMOVED*** [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 */
exports.default = (0, _doLimit2.default)(_groupByLimit2.default, 1);
module.exports = exports['default'];