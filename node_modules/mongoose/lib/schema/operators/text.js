'use strict';

const CastError = require('../../error/cast');
const castBoolean = require('../../cast/boolean');
const castString = require('../../cast/string');

/*!
 * Casts val to an object suitable for `$text`. Throws an error if the object
 * can't be casted.
 *
 * @param ***REMOVED***Any***REMOVED*** val value to cast
 * @param ***REMOVED***String***REMOVED*** [path] path to associate with any errors that occured
 * @return ***REMOVED***Object***REMOVED*** casted object
 * @see https://docs.mongodb.com/manual/reference/operator/query/text/
 * @api private
 */

module.exports = function(val, path) ***REMOVED***
  if (val == null || typeof val !== 'object') ***REMOVED***
    throw new CastError('$text', val, path);
  ***REMOVED***

  if (val.$search != null) ***REMOVED***
    val.$search = castString(val.$search, path + '.$search');
  ***REMOVED***
  if (val.$language != null) ***REMOVED***
    val.$language = castString(val.$language, path + '.$language');
  ***REMOVED***
  if (val.$caseSensitive != null) ***REMOVED***
    val.$caseSensitive = castBoolean(val.$caseSensitive,
      path + '.$castSensitive');
  ***REMOVED***
  if (val.$diacriticSensitive != null) ***REMOVED***
    val.$diacriticSensitive = castBoolean(val.$diacriticSensitive,
      path + '.$diacriticSensitive');
  ***REMOVED***

  return val;
***REMOVED***;
