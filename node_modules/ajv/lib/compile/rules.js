'use strict';

var ruleModules = require('./_rules')
  , toHash = require('./util').toHash;

module.exports = function rules() ***REMOVED***
  var RULES = [
    ***REMOVED*** type: 'number',
      rules: [ ***REMOVED*** 'maximum': ['exclusiveMaximum'] ***REMOVED***,
               ***REMOVED*** 'minimum': ['exclusiveMinimum'] ***REMOVED***, 'multipleOf', 'format'] ***REMOVED***,
    ***REMOVED*** type: 'string',
      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] ***REMOVED***,
    ***REMOVED*** type: 'array',
      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'contains', 'items' ] ***REMOVED***,
    ***REMOVED*** type: 'object',
      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',
               ***REMOVED*** 'properties': ['additionalProperties', 'patternProperties'] ***REMOVED*** ] ***REMOVED***,
    ***REMOVED*** rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] ***REMOVED***
  ];

  var ALL = [ 'type' ];
  var KEYWORDS = [
    'additionalItems', '$schema', '$id', 'id', 'title',
    'description', 'default', 'definitions'
  ];
  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];
  RULES.all = toHash(ALL);
  RULES.types = toHash(TYPES);

  RULES.forEach(function (group) ***REMOVED***
    group.rules = group.rules.map(function (keyword) ***REMOVED***
      var implKeywords;
      if (typeof keyword == 'object') ***REMOVED***
        var key = Object.keys(keyword)[0];
        implKeywords = keyword[key];
        keyword = key;
        implKeywords.forEach(function (k) ***REMOVED***
          ALL.push(k);
          RULES.all[k] = true;
        ***REMOVED***);
      ***REMOVED***
      ALL.push(keyword);
      var rule = RULES.all[keyword] = ***REMOVED***
        keyword: keyword,
        code: ruleModules[keyword],
        implements: implKeywords
      ***REMOVED***;
      return rule;
    ***REMOVED***);

    if (group.type) RULES.types[group.type] = group;
  ***REMOVED***);

  RULES.keywords = toHash(ALL.concat(KEYWORDS));
  RULES.custom = ***REMOVED******REMOVED***;

  return RULES;
***REMOVED***;
