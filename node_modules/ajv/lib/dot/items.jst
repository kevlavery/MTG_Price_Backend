***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupNextLevel ***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.validateItems:startFrom:
  for (var ***REMOVED******REMOVED***=$idx***REMOVED******REMOVED*** = ***REMOVED******REMOVED***=startFrom***REMOVED******REMOVED***; ***REMOVED******REMOVED***=$idx***REMOVED******REMOVED*** < ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***.length; ***REMOVED******REMOVED***=$idx***REMOVED******REMOVED***++) ***REMOVED***
    ***REMOVED******REMOVED***
      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
      var $passData = $data + '[' + $idx + ']';
      $it.dataPathArr[$dataNxt] = $idx;
    ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def.optimizeValidate ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED***
      if (!***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) break;
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED***
#***REMOVED******REMOVED***

***REMOVED******REMOVED***
  var $idx = 'i' + $lvl
    , $dataNxt = $it.dataLevel = it.dataLevel + 1
    , $nextData = 'data' + $dataNxt
    , $currentBaseId = it.baseId;
***REMOVED******REMOVED***

var ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** = errors;
var ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED***;

***REMOVED******REMOVED***? Array.isArray($schema) ***REMOVED******REMOVED***
  ***REMOVED******REMOVED*** /* 'items' is an array of schemas */***REMOVED******REMOVED***
  ***REMOVED******REMOVED*** var $additionalItems = it.schema.additionalItems; ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? $additionalItems === false ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***.length <= ***REMOVED******REMOVED***= $schema.length ***REMOVED******REMOVED***;
    ***REMOVED******REMOVED***
      var $currErrSchemaPath = $errSchemaPath;
      $errSchemaPath = it.errSchemaPath + '/additionalItems';      
    ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def.checkError:'additionalItems' ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def.elseIfValid***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***

  ***REMOVED******REMOVED***~ $schema:$sch:$i ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? ***REMOVED******REMOVED***# def.nonEmptySchema:$sch ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true;

      if (***REMOVED******REMOVED***=$data***REMOVED******REMOVED***.length > ***REMOVED******REMOVED***=$i***REMOVED******REMOVED***) ***REMOVED***
        ***REMOVED******REMOVED***
          var $passData = $data + '[' + $i + ']';
          $it.schema = $sch;
          $it.schemaPath = $schemaPath + '[' + $i + ']';
          $it.errSchemaPath = $errSchemaPath + '/' + $i;
          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);
          $it.dataPathArr[$dataNxt] = $i;
        ***REMOVED******REMOVED***

        ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***# def.optimizeValidate ***REMOVED******REMOVED***
      ***REMOVED***

      ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~***REMOVED******REMOVED***

  ***REMOVED******REMOVED***? typeof $additionalItems == 'object' && ***REMOVED******REMOVED***# def.nonEmptySchema:$additionalItems ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***
      $it.schema = $additionalItems;
      $it.schemaPath = it.schemaPath + '.additionalItems';
      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';
    ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true;

    if (***REMOVED******REMOVED***=$data***REMOVED******REMOVED***.length > ***REMOVED******REMOVED***= $schema.length ***REMOVED******REMOVED***) ***REMOVED***
      ***REMOVED******REMOVED***# def.validateItems: $schema.length ***REMOVED******REMOVED***
    ***REMOVED***

    ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***?? ***REMOVED******REMOVED***# def.nonEmptySchema:$schema ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
  ***REMOVED******REMOVED*** /* 'items' is a single schema */***REMOVED******REMOVED***
  ***REMOVED******REMOVED***
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
  ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.validateItems: 0 ***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***= $closingBraces ***REMOVED******REMOVED***
  if (***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** == errors) ***REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***# def.cleanUp ***REMOVED******REMOVED***
