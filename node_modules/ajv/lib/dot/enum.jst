***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.$data ***REMOVED******REMOVED***

***REMOVED******REMOVED***
  var $i = 'i' + $lvl
    , $vSchema = 'schema' + $lvl;
***REMOVED******REMOVED***

***REMOVED******REMOVED***? !$isData ***REMOVED******REMOVED***
  var ***REMOVED******REMOVED***=$vSchema***REMOVED******REMOVED*** = validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***;
***REMOVED******REMOVED***?***REMOVED******REMOVED***
var ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED***;

***REMOVED******REMOVED***?$isData***REMOVED******REMOVED******REMOVED******REMOVED***# def.check$dataIsArray ***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = false;

for (var ***REMOVED******REMOVED***=$i***REMOVED******REMOVED***=0; ***REMOVED******REMOVED***=$i***REMOVED******REMOVED***<***REMOVED******REMOVED***=$vSchema***REMOVED******REMOVED***.length; ***REMOVED******REMOVED***=$i***REMOVED******REMOVED***++)
  if (equal(***REMOVED******REMOVED***=$data***REMOVED******REMOVED***, ***REMOVED******REMOVED***=$vSchema***REMOVED******REMOVED***[***REMOVED******REMOVED***=$i***REMOVED******REMOVED***])) ***REMOVED***
    ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = true;
    break;
  ***REMOVED***

***REMOVED******REMOVED***? $isData ***REMOVED******REMOVED***  ***REMOVED***  ***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***# def.checkError:'enum' ***REMOVED******REMOVED***

***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** else ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***
