***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***

***REMOVED******REMOVED***## def._validateRef:_v:
  ***REMOVED******REMOVED***? it.opts.passContext ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***=_v***REMOVED******REMOVED***.call(this,
  ***REMOVED******REMOVED***??***REMOVED******REMOVED***
    ***REMOVED******REMOVED***=_v***REMOVED******REMOVED***(
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***, ***REMOVED******REMOVED***# def.dataPath ***REMOVED******REMOVED******REMOVED******REMOVED***# def.passParentData ***REMOVED******REMOVED***, rootData)
#***REMOVED******REMOVED***

***REMOVED******REMOVED*** var $async, $refCode; ***REMOVED******REMOVED***
***REMOVED******REMOVED***? $schema == '#' || $schema == '#/' ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***
    if (it.isRoot) ***REMOVED***
      $async = it.async;
      $refCode = 'validate';
    ***REMOVED*** else ***REMOVED***
      $async = it.root.schema.$async === true;
      $refCode = 'root.refVal[0]';
    ***REMOVED***
  ***REMOVED******REMOVED***
***REMOVED******REMOVED***??***REMOVED******REMOVED***
  ***REMOVED******REMOVED*** var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot); ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? $refVal === undefined ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** var $message = it.MissingRefError.message(it.baseId, $schema); ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? it.opts.missingRefs == 'fail' ***REMOVED******REMOVED***
      ***REMOVED******REMOVED*** it.logger.error($message); ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***# def.error:'$ref' ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** if (false) ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?? it.opts.missingRefs == 'ignore' ***REMOVED******REMOVED***
      ***REMOVED******REMOVED*** it.logger.warn($message); ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** if (true) ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED******REMOVED***??***REMOVED******REMOVED***
      ***REMOVED******REMOVED*** throw new it.MissingRefError(it.baseId, $schema, $message); ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?? $refVal.inline ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def.setupNextLevel ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***
      $it.schema = $refVal.schema;
      $it.schemaPath = '';
      $it.errSchemaPath = $schema;
    ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** var $code = it.validate($it).replace(/validate\.schema/g, $refVal.code); ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***= $code ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? $breakOnError***REMOVED******REMOVED***
      if (***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) ***REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***??***REMOVED******REMOVED***
    ***REMOVED******REMOVED***
      $async = $refVal.$async === true;
      $refCode = $refVal.code;
    ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***? $refCode ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.beginDefOut***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def._validateRef:$refCode ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.storeDefOut:__callValidate ***REMOVED******REMOVED***

  ***REMOVED******REMOVED***? $async ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** if (!it.async) throw new Error('async schema referenced by sync schema'); ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** var ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED***; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    try ***REMOVED***
      ***REMOVED******REMOVED***=it.yieldAwait***REMOVED******REMOVED*** ***REMOVED******REMOVED***=__callValidate***REMOVED******REMOVED***;
      ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = true; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED*** catch (e) ***REMOVED***
      if (!(e instanceof ValidationError)) throw e;
      if (vErrors === null) vErrors = e.errors;
      else vErrors = vErrors.concat(e.errors);
      errors = vErrors.length;
      ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = false; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED***
    ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** if (***REMOVED******REMOVED***=$valid***REMOVED******REMOVED***) ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***??***REMOVED******REMOVED***
    if (!***REMOVED******REMOVED***=__callValidate***REMOVED******REMOVED***) ***REMOVED***
      if (vErrors === null) vErrors = ***REMOVED******REMOVED***=$refCode***REMOVED******REMOVED***.errors;
      else vErrors = vErrors.concat(***REMOVED******REMOVED***=$refCode***REMOVED******REMOVED***.errors);
      errors = vErrors.length;
    ***REMOVED*** ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** else ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***
