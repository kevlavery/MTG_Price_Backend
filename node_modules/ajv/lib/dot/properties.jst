***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupNextLevel ***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.validateAdditional:
  ***REMOVED******REMOVED*** /* additionalProperties is schema */
    $it.schema = $aProperties;
    $it.schemaPath = it.schemaPath + '.additionalProperties';
    $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
    $it.errorPath = it.opts._errorDataPathProperty
                    ? it.errorPath
                    : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
    var $passData = $data + '[' + $key + ']';
    $it.dataPathArr[$dataNxt] = $key;
  ***REMOVED******REMOVED***

  ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.optimizeValidate ***REMOVED******REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***
  var $key = 'key' + $lvl
    , $idx = 'idx' + $lvl
    , $dataNxt = $it.dataLevel = it.dataLevel + 1
    , $nextData = 'data' + $dataNxt
    , $dataProperties = 'dataProperties' + $lvl;

  var $schemaKeys = Object.keys($schema || ***REMOVED******REMOVED***)
    , $pProperties = it.schema.patternProperties || ***REMOVED******REMOVED***
    , $pPropertyKeys = Object.keys($pProperties)
    , $aProperties = it.schema.additionalProperties
    , $someProperties = $schemaKeys.length || $pPropertyKeys.length
    , $noAdditional = $aProperties === false
    , $additionalIsSchema = typeof $aProperties == 'object'
                              && Object.keys($aProperties).length
    , $removeAdditional = it.opts.removeAdditional
    , $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional
    , $ownProperties = it.opts.ownProperties
    , $currentBaseId = it.baseId;

  var $required = it.schema.required;
  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired)
    var $requiredHash = it.util.toHash($required);

  if (it.opts.patternGroups) ***REMOVED***
    var $pgProperties = it.schema.patternGroups || ***REMOVED******REMOVED***
      , $pgPropertyKeys = Object.keys($pgProperties);
  ***REMOVED***
***REMOVED******REMOVED***


var ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** = errors;
var ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true;
***REMOVED******REMOVED***? $ownProperties ***REMOVED******REMOVED***
  var ***REMOVED******REMOVED***=$dataProperties***REMOVED******REMOVED*** = undefined;
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***? $checkAdditional ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.iterateProperties ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? $someProperties ***REMOVED******REMOVED***
      var isAdditional***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** = !(false
        ***REMOVED******REMOVED***? $schemaKeys.length ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***? $schemaKeys.length > 5 ***REMOVED******REMOVED***
            || validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***[***REMOVED******REMOVED***=$key***REMOVED******REMOVED***]
          ***REMOVED******REMOVED***??***REMOVED******REMOVED***
            ***REMOVED******REMOVED***~ $schemaKeys:$propertyKey ***REMOVED******REMOVED***
              || ***REMOVED******REMOVED***=$key***REMOVED******REMOVED*** == ***REMOVED******REMOVED***= it.util.toQuotedString($propertyKey) ***REMOVED******REMOVED***
            ***REMOVED******REMOVED***~***REMOVED******REMOVED***
          ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***? $pPropertyKeys.length ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***~ $pPropertyKeys:$pProperty:$i ***REMOVED******REMOVED***
            || ***REMOVED******REMOVED***= it.usePattern($pProperty) ***REMOVED******REMOVED***.test(***REMOVED******REMOVED***=$key***REMOVED******REMOVED***)
          ***REMOVED******REMOVED***~***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***? it.opts.patternGroups && $pgPropertyKeys.length ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***~ $pgPropertyKeys:$pgProperty:$i ***REMOVED******REMOVED***
            || ***REMOVED******REMOVED***= it.usePattern($pgProperty) ***REMOVED******REMOVED***.test(***REMOVED******REMOVED***=$key***REMOVED******REMOVED***)
          ***REMOVED******REMOVED***~***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      );

      if (isAdditional***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***) ***REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? $removeAdditional == 'all' ***REMOVED******REMOVED***
      delete ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***[***REMOVED******REMOVED***=$key***REMOVED******REMOVED***];
    ***REMOVED******REMOVED***??***REMOVED******REMOVED***
      ***REMOVED******REMOVED***
        var $currentErrorPath = it.errorPath;
        var $additionalProperty = '\' + ' + $key + ' + \'';
        if (it.opts._errorDataPathProperty) ***REMOVED***
          it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
        ***REMOVED***
      ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? $noAdditional ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***? $removeAdditional ***REMOVED******REMOVED***
          delete ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***[***REMOVED******REMOVED***=$key***REMOVED******REMOVED***];
        ***REMOVED******REMOVED***??***REMOVED******REMOVED***
          ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = false;
          ***REMOVED******REMOVED***
            var $currErrSchemaPath = $errSchemaPath;
            $errSchemaPath = it.errSchemaPath + '/additionalProperties';
          ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***# def.error:'additionalProperties' ***REMOVED******REMOVED***
          ***REMOVED******REMOVED*** $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** break; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      ***REMOVED******REMOVED***?? $additionalIsSchema ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***? $removeAdditional == 'failing' ***REMOVED******REMOVED***
          var ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** = errors;
          ***REMOVED******REMOVED***# def.setCompositeRule ***REMOVED******REMOVED***

          ***REMOVED******REMOVED***# def.validateAdditional ***REMOVED******REMOVED***

          if (!***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) ***REMOVED***
            errors = ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED***;
            if (validate.errors !== null) ***REMOVED***
              if (errors) validate.errors.length = errors;
              else validate.errors = null;
            ***REMOVED***
            delete ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***[***REMOVED******REMOVED***=$key***REMOVED******REMOVED***];
          ***REMOVED***

          ***REMOVED******REMOVED***# def.resetCompositeRule ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***??***REMOVED******REMOVED***
          ***REMOVED******REMOVED***# def.validateAdditional ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** if (!***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) break; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      ***REMOVED******REMOVED*** it.errorPath = $currentErrorPath; ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? $someProperties ***REMOVED******REMOVED***
      ***REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED***

  ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED*** var $useDefaults = it.opts.useDefaults && !it.compositeRule; ***REMOVED******REMOVED***

***REMOVED******REMOVED***? $schemaKeys.length ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~ $schemaKeys:$propertyKey ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** var $sch = $schema[$propertyKey]; ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***? ***REMOVED******REMOVED***# def.nonEmptySchema:$sch***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***
        var $prop = it.util.getProperty($propertyKey)
          , $passData = $data + $prop
          , $hasDefault = $useDefaults && $sch.default !== undefined;
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + $prop;
        $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);
        $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);
        $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);
      ***REMOVED******REMOVED***

      ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***

      ***REMOVED******REMOVED***? ***REMOVED******REMOVED***# def.willOptimize ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***
          $code = ***REMOVED******REMOVED***# def._optimizeValidate ***REMOVED******REMOVED***;
          var $useData = $passData;
        ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***??***REMOVED******REMOVED***
        ***REMOVED******REMOVED*** var $useData = $nextData; ***REMOVED******REMOVED***
        var ***REMOVED******REMOVED***=$nextData***REMOVED******REMOVED*** = ***REMOVED******REMOVED***=$passData***REMOVED******REMOVED***;
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***

      ***REMOVED******REMOVED***? $hasDefault ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***= $code ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***??***REMOVED******REMOVED***
        ***REMOVED******REMOVED***? $requiredHash && $requiredHash[$propertyKey] ***REMOVED******REMOVED***
          if (***REMOVED******REMOVED***# def.noPropertyInData ***REMOVED******REMOVED***) ***REMOVED***
            ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = false;
            ***REMOVED******REMOVED***
              var $currentErrorPath = it.errorPath
                , $currErrSchemaPath = $errSchemaPath
                , $missingProperty = it.util.escapeQuotes($propertyKey);
              if (it.opts._errorDataPathProperty) ***REMOVED***
                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
              ***REMOVED***
              $errSchemaPath = it.errSchemaPath + '/required';
            ***REMOVED******REMOVED***
            ***REMOVED******REMOVED***# def.error:'required' ***REMOVED******REMOVED***
            ***REMOVED******REMOVED*** $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***
            ***REMOVED******REMOVED*** it.errorPath = $currentErrorPath; ***REMOVED******REMOVED***
          ***REMOVED*** else ***REMOVED***
        ***REMOVED******REMOVED***??***REMOVED******REMOVED***
          ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED***
            if (***REMOVED******REMOVED***# def.noPropertyInData ***REMOVED******REMOVED***) ***REMOVED***
              ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true;
            ***REMOVED*** else ***REMOVED***
          ***REMOVED******REMOVED***??***REMOVED******REMOVED***
            if (***REMOVED******REMOVED***=$useData***REMOVED******REMOVED*** !== undefined
              ***REMOVED******REMOVED***? $ownProperties ***REMOVED******REMOVED***
                && ***REMOVED******REMOVED***# def.isOwnProperty ***REMOVED******REMOVED***
              ***REMOVED******REMOVED***?***REMOVED******REMOVED***
            ) ***REMOVED***
          ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***

          ***REMOVED******REMOVED***= $code ***REMOVED******REMOVED***
        ***REMOVED***
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***  ***REMOVED******REMOVED*** /* $hasDefault */ ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED*** ***REMOVED******REMOVED*** /* def.nonEmptySchema */ ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***? $pPropertyKeys.length ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~ $pPropertyKeys:$pProperty ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** var $sch = $pProperties[$pProperty]; ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***? ***REMOVED******REMOVED***# def.nonEmptySchema:$sch***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***
        $it.schema = $sch;
        $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);
        $it.errSchemaPath = it.errSchemaPath + '/patternProperties/'
                                             + it.util.escapeFragment($pProperty);
      ***REMOVED******REMOVED***

      ***REMOVED******REMOVED***# def.iterateProperties ***REMOVED******REMOVED***
        if (***REMOVED******REMOVED***= it.usePattern($pProperty) ***REMOVED******REMOVED***.test(***REMOVED******REMOVED***=$key***REMOVED******REMOVED***)) ***REMOVED***
          ***REMOVED******REMOVED***
            $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
            var $passData = $data + '[' + $key + ']';
            $it.dataPathArr[$dataNxt] = $key;
          ***REMOVED******REMOVED***

          ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***# def.optimizeValidate ***REMOVED******REMOVED***

          ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** if (!***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) break; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED***
        ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** else ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      ***REMOVED***

      ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED*** ***REMOVED******REMOVED*** /* def.nonEmptySchema */ ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***


***REMOVED******REMOVED***? it.opts.patternGroups && $pgPropertyKeys.length ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~ $pgPropertyKeys:$pgProperty ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***
      var $pgSchema = $pgProperties[$pgProperty]
        , $sch = $pgSchema.schema;
    ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***? ***REMOVED******REMOVED***# def.nonEmptySchema:$sch***REMOVED******REMOVED*** ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***
        $it.schema = $sch;
        $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';
        $it.errSchemaPath = it.errSchemaPath + '/patternGroups/'
                                             + it.util.escapeFragment($pgProperty)
                                             + '/schema';
      ***REMOVED******REMOVED***

      var pgPropCount***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** = 0;

      ***REMOVED******REMOVED***# def.iterateProperties ***REMOVED******REMOVED***
        if (***REMOVED******REMOVED***= it.usePattern($pgProperty) ***REMOVED******REMOVED***.test(***REMOVED******REMOVED***=$key***REMOVED******REMOVED***)) ***REMOVED***
          pgPropCount***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***++;

          ***REMOVED******REMOVED***
            $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
            var $passData = $data + '[' + $key + ']';
            $it.dataPathArr[$dataNxt] = $key;
          ***REMOVED******REMOVED***

          ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***# def.optimizeValidate ***REMOVED******REMOVED***

          ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** if (!***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) break; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED***
        ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** else ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true; ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      ***REMOVED***

      ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***

      ***REMOVED******REMOVED***
        var $pgMin = $pgSchema.minimum
          , $pgMax = $pgSchema.maximum;
      ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? $pgMin !== undefined || $pgMax !== undefined ***REMOVED******REMOVED***
        var ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = true;

        ***REMOVED******REMOVED*** var $currErrSchemaPath = $errSchemaPath; ***REMOVED******REMOVED***

        ***REMOVED******REMOVED***? $pgMin !== undefined ***REMOVED******REMOVED***
          ***REMOVED******REMOVED*** var $limit = $pgMin, $reason = 'minimum', $moreOrLess = 'less'; ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = pgPropCount***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** >= ***REMOVED******REMOVED***=$pgMin***REMOVED******REMOVED***;
          ***REMOVED******REMOVED*** $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum'; ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***# def.checkError:'patternGroups' ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***? $pgMax !== undefined ***REMOVED******REMOVED***
            else
          ***REMOVED******REMOVED***?***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***

        ***REMOVED******REMOVED***? $pgMax !== undefined ***REMOVED******REMOVED***
          ***REMOVED******REMOVED*** var $limit = $pgMax, $reason = 'maximum', $moreOrLess = 'more'; ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED*** = pgPropCount***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** <= ***REMOVED******REMOVED***=$pgMax***REMOVED******REMOVED***;
          ***REMOVED******REMOVED*** $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum'; ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***# def.checkError:'patternGroups' ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***?***REMOVED******REMOVED***

        ***REMOVED******REMOVED*** $errSchemaPath = $currErrSchemaPath; ***REMOVED******REMOVED***

        ***REMOVED******REMOVED***# def.ifValid ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED*** ***REMOVED******REMOVED*** /* def.nonEmptySchema */ ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***~***REMOVED******REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***


***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***= $closingBraces ***REMOVED******REMOVED***
  if (***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** == errors) ***REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***# def.cleanUp ***REMOVED******REMOVED***
