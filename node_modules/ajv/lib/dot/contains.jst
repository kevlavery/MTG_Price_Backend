***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupNextLevel ***REMOVED******REMOVED***


***REMOVED******REMOVED***
  var $idx = 'i' + $lvl
    , $dataNxt = $it.dataLevel = it.dataLevel + 1
    , $nextData = 'data' + $dataNxt
    , $currentBaseId = it.baseId
    , $nonEmptySchema = ***REMOVED******REMOVED***# def.nonEmptySchema:$schema ***REMOVED******REMOVED***;
***REMOVED******REMOVED***

var ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** = errors;
var ***REMOVED******REMOVED***=$valid***REMOVED******REMOVED***;

***REMOVED******REMOVED***? $nonEmptySchema ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.setCompositeRule ***REMOVED******REMOVED***

  ***REMOVED******REMOVED***
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
  ***REMOVED******REMOVED***

  var ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = false;

  for (var ***REMOVED******REMOVED***=$idx***REMOVED******REMOVED*** = 0; ***REMOVED******REMOVED***=$idx***REMOVED******REMOVED*** < ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***.length; ***REMOVED******REMOVED***=$idx***REMOVED******REMOVED***++) ***REMOVED***
    ***REMOVED******REMOVED***
      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
      var $passData = $data + '[' + $idx + ']';
      $it.dataPathArr[$dataNxt] = $idx;
    ***REMOVED******REMOVED***

    ***REMOVED******REMOVED***# def.generateSubschemaCode ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def.optimizeValidate ***REMOVED******REMOVED***

    if (***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) break;
  ***REMOVED***

  ***REMOVED******REMOVED***# def.resetCompositeRule ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***= $closingBraces ***REMOVED******REMOVED***

  if (!***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED***) ***REMOVED***
***REMOVED******REMOVED***??***REMOVED******REMOVED***
  if (***REMOVED******REMOVED***=$data***REMOVED******REMOVED***.length == 0) ***REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

    ***REMOVED******REMOVED***# def.error:'contains' ***REMOVED******REMOVED***
  ***REMOVED*** else ***REMOVED***
    ***REMOVED******REMOVED***? $nonEmptySchema ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***# def.resetErrors ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? it.opts.allErrors ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***# def.cleanUp ***REMOVED******REMOVED***
