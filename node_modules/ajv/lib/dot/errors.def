***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***

***REMOVED******REMOVED***## def._error:_rule:
  ***REMOVED******REMOVED*** 'istanbul ignore else'; ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? it.createErrors !== false ***REMOVED******REMOVED***
    ***REMOVED***
      keyword: '***REMOVED******REMOVED***= $errorKeyword || _rule ***REMOVED******REMOVED***'
      , dataPath: (dataPath || '') + ***REMOVED******REMOVED***= it.errorPath ***REMOVED******REMOVED***
      , schemaPath: ***REMOVED******REMOVED***=it.util.toQuotedString($errSchemaPath)***REMOVED******REMOVED***
      , params: ***REMOVED******REMOVED***# def._errorParams[_rule] ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? it.opts.messages !== false ***REMOVED******REMOVED***
        , message: ***REMOVED******REMOVED***# def._errorMessages[_rule] ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? it.opts.verbose ***REMOVED******REMOVED***
        , schema: ***REMOVED******REMOVED***# def._errorSchemas[_rule] ***REMOVED******REMOVED***
        , parentSchema: validate.schema***REMOVED******REMOVED***=it.schemaPath***REMOVED******REMOVED***
        , data: ***REMOVED******REMOVED***=$data***REMOVED******REMOVED***
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED***
  ***REMOVED******REMOVED***??***REMOVED******REMOVED***
    ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def._addError:_rule:
  if (vErrors === null) vErrors = [err];
  else vErrors.push(err);
  errors++;
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.addError:_rule:
  var err = ***REMOVED******REMOVED***# def._error:_rule ***REMOVED******REMOVED***;
  ***REMOVED******REMOVED***# def._addError:_rule ***REMOVED******REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.error:_rule:
  ***REMOVED******REMOVED***# def.beginDefOut***REMOVED******REMOVED***
    ***REMOVED******REMOVED***# def._error:_rule ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***# def.storeDefOut:__err ***REMOVED******REMOVED***

  ***REMOVED******REMOVED***? !it.compositeRule && $breakOnError ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** 'istanbul ignore if'; ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? it.async ***REMOVED******REMOVED***
      throw new ValidationError([***REMOVED******REMOVED***=__err***REMOVED******REMOVED***]);
    ***REMOVED******REMOVED***??***REMOVED******REMOVED***
      validate.errors = [***REMOVED******REMOVED***=__err***REMOVED******REMOVED***];
      return false;
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***??***REMOVED******REMOVED***
    var err = ***REMOVED******REMOVED***=__err***REMOVED******REMOVED***;
    ***REMOVED******REMOVED***# def._addError:_rule ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.extraError:_rule:
  ***REMOVED******REMOVED***# def.addError:_rule***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? !it.compositeRule && $breakOnError ***REMOVED******REMOVED***
    ***REMOVED******REMOVED*** 'istanbul ignore if'; ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***? it.async ***REMOVED******REMOVED***
      throw new ValidationError(vErrors);
    ***REMOVED******REMOVED***??***REMOVED******REMOVED***
      validate.errors = vErrors;
      return false;
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.checkError:_rule:
  if (!***REMOVED******REMOVED***=$valid***REMOVED******REMOVED***) ***REMOVED***
    ***REMOVED******REMOVED***# def.error:_rule ***REMOVED******REMOVED***
  ***REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.resetErrors:
  errors = ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED***;
  if (vErrors !== null) ***REMOVED***
    if (***REMOVED******REMOVED***=$errs***REMOVED******REMOVED***) vErrors.length = ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED***;
    else vErrors = null;
  ***REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.concatSchema:***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***' + ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** + '***REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=$schema***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED***#***REMOVED******REMOVED***
***REMOVED******REMOVED***## def.appendSchema:***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***' + ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED***'***REMOVED******REMOVED***?***REMOVED******REMOVED***#***REMOVED******REMOVED***
***REMOVED******REMOVED***## def.concatSchemaEQ:***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***' + ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** + '***REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=it.util.escapeQuotes($schema)***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED***#***REMOVED******REMOVED***

***REMOVED******REMOVED***## def._errorMessages = ***REMOVED***
  'false schema':  "'boolean schema is false'",
  $ref:            "'can\\\'t resolve reference ***REMOVED******REMOVED***=it.util.escapeQuotes($schema)***REMOVED******REMOVED***'",
  additionalItems: "'should NOT have more than ***REMOVED******REMOVED***=$schema.length***REMOVED******REMOVED*** items'",
  additionalProperties: "'should NOT have additional properties'",
  anyOf:           "'should match some schema in anyOf'",
  const:           "'should be equal to constant'",
  contains:        "'should contain a valid item'",
  dependencies:    "'should have ***REMOVED******REMOVED***? $deps.length == 1 ***REMOVED******REMOVED***property ***REMOVED******REMOVED***= it.util.escapeQuotes($deps[0]) ***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED***properties ***REMOVED******REMOVED***= it.util.escapeQuotes($deps.join(\", \")) ***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED*** when property ***REMOVED******REMOVED***= it.util.escapeQuotes($property) ***REMOVED******REMOVED*** is present'",
  'enum':          "'should be equal to one of the allowed values'",
  format:          "'should match format \"***REMOVED******REMOVED***#def.concatSchemaEQ***REMOVED******REMOVED***\"'",
  _limit:          "'should be ***REMOVED******REMOVED***=$opStr***REMOVED******REMOVED*** ***REMOVED******REMOVED***#def.appendSchema***REMOVED******REMOVED***",
  _exclusiveLimit: "'***REMOVED******REMOVED***=$exclusiveKeyword***REMOVED******REMOVED*** should be boolean'",
  _limitItems:     "'should NOT have ***REMOVED******REMOVED***?$keyword=='maxItems'***REMOVED******REMOVED***more***REMOVED******REMOVED***??***REMOVED******REMOVED***less***REMOVED******REMOVED***?***REMOVED******REMOVED*** than ***REMOVED******REMOVED***#def.concatSchema***REMOVED******REMOVED*** items'",
  _limitLength:    "'should NOT be ***REMOVED******REMOVED***?$keyword=='maxLength'***REMOVED******REMOVED***longer***REMOVED******REMOVED***??***REMOVED******REMOVED***shorter***REMOVED******REMOVED***?***REMOVED******REMOVED*** than ***REMOVED******REMOVED***#def.concatSchema***REMOVED******REMOVED*** characters'",
  _limitProperties:"'should NOT have ***REMOVED******REMOVED***?$keyword=='maxProperties'***REMOVED******REMOVED***more***REMOVED******REMOVED***??***REMOVED******REMOVED***less***REMOVED******REMOVED***?***REMOVED******REMOVED*** than ***REMOVED******REMOVED***#def.concatSchema***REMOVED******REMOVED*** properties'",
  multipleOf:      "'should be multiple of ***REMOVED******REMOVED***#def.appendSchema***REMOVED******REMOVED***",
  not:             "'should NOT be valid'",
  oneOf:           "'should match exactly one schema in oneOf'",
  pattern:         "'should match pattern \"***REMOVED******REMOVED***#def.concatSchemaEQ***REMOVED******REMOVED***\"'",
  patternGroups:   "'should NOT have ***REMOVED******REMOVED***=$moreOrLess***REMOVED******REMOVED*** than ***REMOVED******REMOVED***=$limit***REMOVED******REMOVED*** properties matching pattern \"***REMOVED******REMOVED***=it.util.escapeQuotes($pgProperty)***REMOVED******REMOVED***\"'",
  propertyNames:   "'property name \\'***REMOVED******REMOVED***=$invalidName***REMOVED******REMOVED***\\' is invalid'",
  required:        "'***REMOVED******REMOVED***? it.opts._errorDataPathProperty ***REMOVED******REMOVED***is a required property***REMOVED******REMOVED***??***REMOVED******REMOVED***should have required property \\'***REMOVED******REMOVED***=$missingProperty***REMOVED******REMOVED***\\'***REMOVED******REMOVED***?***REMOVED******REMOVED***'",
  type:            "'should be ***REMOVED******REMOVED***? $typeIsArray ***REMOVED******REMOVED******REMOVED******REMOVED***= $typeSchema.join(\",\") ***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=$typeSchema***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED***'",
  uniqueItems:     "'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)'",
  custom:          "'should pass \"***REMOVED******REMOVED***=$rule.keyword***REMOVED******REMOVED***\" keyword validation'",
  patternRequired: "'should have property matching pattern \\'***REMOVED******REMOVED***=$missingPattern***REMOVED******REMOVED***\\''",
  switch:          "'should pass \"switch\" keyword validation'",
  _formatLimit:    "'should be ***REMOVED******REMOVED***=$opStr***REMOVED******REMOVED*** \"***REMOVED******REMOVED***#def.concatSchemaEQ***REMOVED******REMOVED***\"'",
  _formatExclusiveLimit: "'***REMOVED******REMOVED***=$exclusiveKeyword***REMOVED******REMOVED*** should be boolean'"
***REMOVED*** #***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.schemaRefOrVal: ***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=$schema***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED*** #***REMOVED******REMOVED***
***REMOVED******REMOVED***## def.schemaRefOrQS: ***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=it.util.toQuotedString($schema)***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED*** #***REMOVED******REMOVED***

***REMOVED******REMOVED***## def._errorSchemas = ***REMOVED***
  'false schema':  "false",
  $ref:            "***REMOVED******REMOVED***=it.util.toQuotedString($schema)***REMOVED******REMOVED***",
  additionalItems: "false",
  additionalProperties: "false",
  anyOf:           "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  const:           "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  contains:        "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  dependencies:    "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  'enum':          "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  format:          "***REMOVED******REMOVED***#def.schemaRefOrQS***REMOVED******REMOVED***",
  _limit:          "***REMOVED******REMOVED***#def.schemaRefOrVal***REMOVED******REMOVED***",
  _exclusiveLimit: "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  _limitItems:     "***REMOVED******REMOVED***#def.schemaRefOrVal***REMOVED******REMOVED***",
  _limitLength:    "***REMOVED******REMOVED***#def.schemaRefOrVal***REMOVED******REMOVED***",
  _limitProperties:"***REMOVED******REMOVED***#def.schemaRefOrVal***REMOVED******REMOVED***",
  multipleOf:      "***REMOVED******REMOVED***#def.schemaRefOrVal***REMOVED******REMOVED***",
  not:             "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  oneOf:           "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  pattern:         "***REMOVED******REMOVED***#def.schemaRefOrQS***REMOVED******REMOVED***",
  patternGroups:   "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  propertyNames:   "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  required:        "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  type:            "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  uniqueItems:     "***REMOVED******REMOVED***#def.schemaRefOrVal***REMOVED******REMOVED***",
  custom:          "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  patternRequired: "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  switch:          "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***",
  _formatLimit:    "***REMOVED******REMOVED***#def.schemaRefOrQS***REMOVED******REMOVED***",
  _formatExclusiveLimit: "validate.schema***REMOVED******REMOVED***=$schemaPath***REMOVED******REMOVED***"
***REMOVED*** #***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.schemaValueQS: ***REMOVED******REMOVED***?$isData***REMOVED******REMOVED******REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=it.util.toQuotedString($schema)***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED*** #***REMOVED******REMOVED***

***REMOVED******REMOVED***## def._errorParams = ***REMOVED***
  'false schema':  "***REMOVED******REMOVED***",
  $ref:            "***REMOVED*** ref: '***REMOVED******REMOVED***=it.util.escapeQuotes($schema)***REMOVED******REMOVED***' ***REMOVED***",
  additionalItems: "***REMOVED*** limit: ***REMOVED******REMOVED***=$schema.length***REMOVED******REMOVED*** ***REMOVED***",
  additionalProperties: "***REMOVED*** additionalProperty: '***REMOVED******REMOVED***=$additionalProperty***REMOVED******REMOVED***' ***REMOVED***",
  anyOf:           "***REMOVED******REMOVED***",
  const:           "***REMOVED******REMOVED***",
  contains:        "***REMOVED******REMOVED***",
  dependencies:    "***REMOVED*** property: '***REMOVED******REMOVED***= it.util.escapeQuotes($property) ***REMOVED******REMOVED***', missingProperty: '***REMOVED******REMOVED***=$missingProperty***REMOVED******REMOVED***', depsCount: ***REMOVED******REMOVED***=$deps.length***REMOVED******REMOVED***, deps: '***REMOVED******REMOVED***= it.util.escapeQuotes($deps.length==1 ? $deps[0] : $deps.join(\", \")) ***REMOVED******REMOVED***' ***REMOVED***",
  'enum':          "***REMOVED*** allowedValues: schema***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** ***REMOVED***",
  format:          "***REMOVED*** format: ***REMOVED******REMOVED***#def.schemaValueQS***REMOVED******REMOVED*** ***REMOVED***",
  _limit:          "***REMOVED*** comparison: ***REMOVED******REMOVED***=$opExpr***REMOVED******REMOVED***, limit: ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED***, exclusive: ***REMOVED******REMOVED***=$exclusive***REMOVED******REMOVED*** ***REMOVED***",
  _exclusiveLimit: "***REMOVED******REMOVED***",
  _limitItems:     "***REMOVED*** limit: ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** ***REMOVED***",
  _limitLength:    "***REMOVED*** limit: ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** ***REMOVED***",
  _limitProperties:"***REMOVED*** limit: ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** ***REMOVED***",
  multipleOf:      "***REMOVED*** multipleOf: ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** ***REMOVED***",
  not:             "***REMOVED******REMOVED***",
  oneOf:           "***REMOVED******REMOVED***",
  pattern:         "***REMOVED*** pattern: ***REMOVED******REMOVED***#def.schemaValueQS***REMOVED******REMOVED*** ***REMOVED***",
  patternGroups:   "***REMOVED*** reason: '***REMOVED******REMOVED***=$reason***REMOVED******REMOVED***', limit: ***REMOVED******REMOVED***=$limit***REMOVED******REMOVED***, pattern: '***REMOVED******REMOVED***=it.util.escapeQuotes($pgProperty)***REMOVED******REMOVED***' ***REMOVED***",
  propertyNames:   "***REMOVED*** propertyName: '***REMOVED******REMOVED***=$invalidName***REMOVED******REMOVED***' ***REMOVED***",
  required:        "***REMOVED*** missingProperty: '***REMOVED******REMOVED***=$missingProperty***REMOVED******REMOVED***' ***REMOVED***",
  type:            "***REMOVED*** type: '***REMOVED******REMOVED***? $typeIsArray ***REMOVED******REMOVED******REMOVED******REMOVED***= $typeSchema.join(\",\") ***REMOVED******REMOVED******REMOVED******REMOVED***??***REMOVED******REMOVED******REMOVED******REMOVED***=$typeSchema***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED******REMOVED***' ***REMOVED***",
  uniqueItems:     "***REMOVED*** i: i, j: j ***REMOVED***",
  custom:          "***REMOVED*** keyword: '***REMOVED******REMOVED***=$rule.keyword***REMOVED******REMOVED***' ***REMOVED***",
  patternRequired: "***REMOVED*** missingPattern: '***REMOVED******REMOVED***=$missingPattern***REMOVED******REMOVED***' ***REMOVED***",
  switch:          "***REMOVED*** caseIndex: ***REMOVED******REMOVED***=$caseIndex***REMOVED******REMOVED*** ***REMOVED***",
  _formatLimit:    "***REMOVED*** comparison: ***REMOVED******REMOVED***=$opExpr***REMOVED******REMOVED***, limit: ***REMOVED******REMOVED***#def.schemaValueQS***REMOVED******REMOVED***, exclusive: ***REMOVED******REMOVED***=$exclusive***REMOVED******REMOVED*** ***REMOVED***",
  _formatExclusiveLimit: "***REMOVED******REMOVED***"
***REMOVED*** #***REMOVED******REMOVED***
