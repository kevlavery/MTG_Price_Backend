***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.$data ***REMOVED******REMOVED***

var division***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***;
if (***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***
      ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** !== undefined && (
      typeof ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED*** != 'number' ||
    ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      (division***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** = ***REMOVED******REMOVED***=$data***REMOVED******REMOVED*** / ***REMOVED******REMOVED***=$schemaValue***REMOVED******REMOVED***,
      ***REMOVED******REMOVED***? it.opts.multipleOfPrecision ***REMOVED******REMOVED***
        Math.abs(Math.round(division***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***) - division***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***) > 1e-***REMOVED******REMOVED***=it.opts.multipleOfPrecision***REMOVED******REMOVED***
      ***REMOVED******REMOVED***??***REMOVED******REMOVED***
        division***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED*** !== parseInt(division***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***)
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***
      )
    ***REMOVED******REMOVED***?$isData***REMOVED******REMOVED***  )  ***REMOVED******REMOVED***?***REMOVED******REMOVED*** ) ***REMOVED***
  ***REMOVED******REMOVED***# def.error:'multipleOf' ***REMOVED******REMOVED***
***REMOVED*** ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** else ***REMOVED*** ***REMOVED******REMOVED***?***REMOVED******REMOVED***
