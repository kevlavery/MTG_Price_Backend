***REMOVED******REMOVED***# def.definitions ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.errors ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.missing ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupKeyword ***REMOVED******REMOVED***
***REMOVED******REMOVED***# def.setupNextLevel ***REMOVED******REMOVED***


***REMOVED******REMOVED***## def.propertyInData:
  ***REMOVED******REMOVED***=$data***REMOVED******REMOVED******REMOVED******REMOVED***= it.util.getProperty($property) ***REMOVED******REMOVED*** !== undefined
  ***REMOVED******REMOVED***? $ownProperties ***REMOVED******REMOVED***
    && Object.prototype.hasOwnProperty.call(***REMOVED******REMOVED***=$data***REMOVED******REMOVED***, '***REMOVED******REMOVED***=it.util.escapeQuotes($property)***REMOVED******REMOVED***')
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
#***REMOVED******REMOVED***


***REMOVED******REMOVED***
  var $schemaDeps = ***REMOVED******REMOVED***
    , $propertyDeps = ***REMOVED******REMOVED***
    , $ownProperties = it.opts.ownProperties;

  for ($property in $schema) ***REMOVED***
    var $sch = $schema[$property];
    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;
    $deps[$property] = $sch;
  ***REMOVED***
***REMOVED******REMOVED***

var ***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** = errors;

***REMOVED******REMOVED*** var $currentErrorPath = it.errorPath; ***REMOVED******REMOVED***

var missing***REMOVED******REMOVED***=$lvl***REMOVED******REMOVED***;
***REMOVED******REMOVED*** for (var $property in $propertyDeps) ***REMOVED*** ***REMOVED******REMOVED***
  ***REMOVED******REMOVED*** $deps = $propertyDeps[$property]; ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? $deps.length ***REMOVED******REMOVED***
    if (***REMOVED******REMOVED***# def.propertyInData ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED***
          && (***REMOVED******REMOVED***# def.checkMissingProperty:$deps ***REMOVED******REMOVED***)) ***REMOVED***
          ***REMOVED******REMOVED***# def.errorMissingProperty:'dependencies' ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***??***REMOVED******REMOVED***
        ) ***REMOVED***
          ***REMOVED******REMOVED***~ $deps:$propertyKey ***REMOVED******REMOVED***
            ***REMOVED******REMOVED***# def.allErrorsMissingProperty:'dependencies' ***REMOVED******REMOVED***
          ***REMOVED******REMOVED***~***REMOVED******REMOVED***
      ***REMOVED******REMOVED***?***REMOVED******REMOVED***
    ***REMOVED*** ***REMOVED******REMOVED***# def.elseIfValid ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED******REMOVED***

***REMOVED******REMOVED***
  it.errorPath = $currentErrorPath;
  var $currentBaseId = $it.baseId;
***REMOVED******REMOVED***


***REMOVED******REMOVED*** for (var $property in $schemaDeps) ***REMOVED*** ***REMOVED******REMOVED***
  ***REMOVED******REMOVED*** var $sch = $schemaDeps[$property]; ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***? ***REMOVED******REMOVED***# def.nonEmptySchema:$sch ***REMOVED******REMOVED*** ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***=$nextValid***REMOVED******REMOVED*** = true;

    if (***REMOVED******REMOVED***# def.propertyInData ***REMOVED******REMOVED***) ***REMOVED***
      ***REMOVED******REMOVED*** 
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + it.util.getProperty($property);
        $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);
      ***REMOVED******REMOVED***

      ***REMOVED******REMOVED***# def.insertSubschemaCode ***REMOVED******REMOVED***
    ***REMOVED***

    ***REMOVED******REMOVED***# def.ifResultValid ***REMOVED******REMOVED***
  ***REMOVED******REMOVED***?***REMOVED******REMOVED***
***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED******REMOVED***

***REMOVED******REMOVED***? $breakOnError ***REMOVED******REMOVED*** 
  ***REMOVED******REMOVED***= $closingBraces ***REMOVED******REMOVED***
  if (***REMOVED******REMOVED***=$errs***REMOVED******REMOVED*** == errors) ***REMOVED***
***REMOVED******REMOVED***?***REMOVED******REMOVED***

***REMOVED******REMOVED***# def.cleanUp ***REMOVED******REMOVED***
