"use strict";
module.exports = function(NEXT_FILTER) ***REMOVED***
var util = require("./util");
var getKeys = require("./es5").keys;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;

function catchFilter(instances, cb, promise) ***REMOVED***
    return function(e) ***REMOVED***
        var boundTo = promise._boundValue();
        predicateLoop: for (var i = 0; i < instances.length; ++i) ***REMOVED***
            var item = instances[i];

            if (item === Error ||
                (item != null && item.prototype instanceof Error)) ***REMOVED***
                if (e instanceof item) ***REMOVED***
                    return tryCatch(cb).call(boundTo, e);
                ***REMOVED***
            ***REMOVED*** else if (typeof item === "function") ***REMOVED***
                var matchesPredicate = tryCatch(item).call(boundTo, e);
                if (matchesPredicate === errorObj) ***REMOVED***
                    return matchesPredicate;
                ***REMOVED*** else if (matchesPredicate) ***REMOVED***
                    return tryCatch(cb).call(boundTo, e);
                ***REMOVED***
            ***REMOVED*** else if (util.isObject(e)) ***REMOVED***
                var keys = getKeys(item);
                for (var j = 0; j < keys.length; ++j) ***REMOVED***
                    var key = keys[j];
                    if (item[key] != e[key]) ***REMOVED***
                        continue predicateLoop;
                    ***REMOVED***
                ***REMOVED***
                return tryCatch(cb).call(boundTo, e);
            ***REMOVED***
        ***REMOVED***
        return NEXT_FILTER;
    ***REMOVED***;
***REMOVED***

return catchFilter;
***REMOVED***;
