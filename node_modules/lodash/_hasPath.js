var castPath = require('./_castPath'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isIndex = require('./_isIndex'),
    isLength = require('./isLength'),
    toKey = require('./_toKey');

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param ***REMOVED***Object***REMOVED*** object The object to query.
 * @param ***REMOVED***Array|string***REMOVED*** path The path to check.
 * @param ***REMOVED***Function***REMOVED*** hasFunc The function to check properties.
 * @returns ***REMOVED***boolean***REMOVED*** Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) ***REMOVED***
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) ***REMOVED***
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) ***REMOVED***
      break;
    ***REMOVED***
    object = object[key];
  ***REMOVED***
  if (result || ++index != length) ***REMOVED***
    return result;
  ***REMOVED***
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
***REMOVED***

module.exports = hasPath;
