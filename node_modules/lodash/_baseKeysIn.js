var isObject = require('./isObject'),
    isPrototype = require('./_isPrototype'),
    nativeKeysIn = require('./_nativeKeysIn');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param ***REMOVED***Object***REMOVED*** object The object to query.
 * @returns ***REMOVED***Array***REMOVED*** Returns the array of property names.
 */
function baseKeysIn(object) ***REMOVED***
  if (!isObject(object)) ***REMOVED***
    return nativeKeysIn(object);
  ***REMOVED***
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) ***REMOVED***
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) ***REMOVED***
      result.push(key);
    ***REMOVED***
  ***REMOVED***
  return result;
***REMOVED***

module.exports = baseKeysIn;
