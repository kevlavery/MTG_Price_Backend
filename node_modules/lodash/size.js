var baseKeys = require('./_baseKeys'),
    getTag = require('./_getTag'),
    isArrayLike = require('./isArrayLike'),
    isString = require('./isString'),
    stringSize = require('./_stringSize');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/**
 * Gets the size of `collection` by returning its length for array-like
 * values or the number of own enumerable string keyed properties for objects.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param ***REMOVED***Array|Object|string***REMOVED*** collection The collection to inspect.
 * @returns ***REMOVED***number***REMOVED*** Returns the collection size.
 * @example
 *
 * _.size([1, 2, 3]);
 * // => 3
 *
 * _.size(***REMOVED*** 'a': 1, 'b': 2 ***REMOVED***);
 * // => 2
 *
 * _.size('pebbles');
 * // => 7
 */
function size(collection) ***REMOVED***
  if (collection == null) ***REMOVED***
    return 0;
  ***REMOVED***
  if (isArrayLike(collection)) ***REMOVED***
    return isString(collection) ? stringSize(collection) : collection.length;
  ***REMOVED***
  var tag = getTag(collection);
  if (tag == mapTag || tag == setTag) ***REMOVED***
    return collection.size;
  ***REMOVED***
  return baseKeys(collection).length;
***REMOVED***

module.exports = size;
