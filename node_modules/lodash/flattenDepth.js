var baseFlatten = require('./_baseFlatten'),
    toInteger = require('./toInteger');

/**
 * Recursively flatten `array` up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Array
 * @param ***REMOVED***Array***REMOVED*** array The array to flatten.
 * @param ***REMOVED***number***REMOVED*** [depth=1] The maximum recursion depth.
 * @returns ***REMOVED***Array***REMOVED*** Returns the new flattened array.
 * @example
 *
 * var array = [1, [2, [3, [4]], 5]];
 *
 * _.flattenDepth(array, 1);
 * // => [1, 2, [3, [4]], 5]
 *
 * _.flattenDepth(array, 2);
 * // => [1, 2, 3, [4], 5]
 */
function flattenDepth(array, depth) ***REMOVED***
  var length = array == null ? 0 : array.length;
  if (!length) ***REMOVED***
    return [];
  ***REMOVED***
  depth = depth === undefined ? 1 : toInteger(depth);
  return baseFlatten(array, depth);
***REMOVED***

module.exports = flattenDepth;
