var baseDifference = require('./_baseDifference'),
    baseFlatten = require('./_baseFlatten'),
    baseUniq = require('./_baseUniq');

/**
 * The base implementation of methods like `_.xor`, without support for
 * iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param ***REMOVED***Array***REMOVED*** arrays The arrays to inspect.
 * @param ***REMOVED***Function***REMOVED*** [iteratee] The iteratee invoked per element.
 * @param ***REMOVED***Function***REMOVED*** [comparator] The comparator invoked per element.
 * @returns ***REMOVED***Array***REMOVED*** Returns the new array of values.
 */
function baseXor(arrays, iteratee, comparator) ***REMOVED***
  var length = arrays.length;
  if (length < 2) ***REMOVED***
    return length ? baseUniq(arrays[0]) : [];
  ***REMOVED***
  var index = -1,
      result = Array(length);

  while (++index < length) ***REMOVED***
    var array = arrays[index],
        othIndex = -1;

    while (++othIndex < length) ***REMOVED***
      if (othIndex != index) ***REMOVED***
        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
  return baseUniq(baseFlatten(result, 1), iteratee, comparator);
***REMOVED***

module.exports = baseXor;
