var arrayMap = require('./_arrayMap'),
    baseIteratee = require('./_baseIteratee'),
    baseMap = require('./_baseMap'),
    baseSortBy = require('./_baseSortBy'),
    baseUnary = require('./_baseUnary'),
    compareMultiple = require('./_compareMultiple'),
    identity = require('./identity');

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param ***REMOVED***Array|Object***REMOVED*** collection The collection to iterate over.
 * @param ***REMOVED***Function[]|Object[]|string[]***REMOVED*** iteratees The iteratees to sort by.
 * @param ***REMOVED***string[]***REMOVED*** orders The sort orders of `iteratees`.
 * @returns ***REMOVED***Array***REMOVED*** Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) ***REMOVED***
  var index = -1;
  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) ***REMOVED***
    var criteria = arrayMap(iteratees, function(iteratee) ***REMOVED***
      return iteratee(value);
    ***REMOVED***);
    return ***REMOVED*** 'criteria': criteria, 'index': ++index, 'value': value ***REMOVED***;
  ***REMOVED***);

  return baseSortBy(result, function(object, other) ***REMOVED***
    return compareMultiple(object, other, orders);
  ***REMOVED***);
***REMOVED***

module.exports = baseOrderBy;
