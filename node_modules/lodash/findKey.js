var baseFindKey = require('./_baseFindKey'),
    baseForOwn = require('./_baseForOwn'),
    baseIteratee = require('./_baseIteratee');

/**
 * This method is like `_.find` except that it returns the key of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Object
 * @param ***REMOVED***Object***REMOVED*** object The object to inspect.
 * @param ***REMOVED***Function***REMOVED*** [predicate=_.identity] The function invoked per iteration.
 * @returns ***REMOVED***string|undefined***REMOVED*** Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = ***REMOVED***
 *   'barney':  ***REMOVED*** 'age': 36, 'active': true ***REMOVED***,
 *   'fred':    ***REMOVED*** 'age': 40, 'active': false ***REMOVED***,
 *   'pebbles': ***REMOVED*** 'age': 1,  'active': true ***REMOVED***
 * ***REMOVED***;
 *
 * _.findKey(users, function(o) ***REMOVED*** return o.age < 40; ***REMOVED***);
 * // => 'barney' (iteration order is not guaranteed)
 *
 * // The `_.matches` iteratee shorthand.
 * _.findKey(users, ***REMOVED*** 'age': 1, 'active': true ***REMOVED***);
 * // => 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findKey(users, 'active');
 * // => 'barney'
 */
function findKey(object, predicate) ***REMOVED***
  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);
***REMOVED***

module.exports = findKey;
