/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param ***REMOVED***Function***REMOVED*** func The function to invoke.
 * @param ***REMOVED*******REMOVED*** thisArg The `this` binding of `func`.
 * @param ***REMOVED***Array***REMOVED*** args The arguments to invoke `func` with.
 * @returns ***REMOVED*******REMOVED*** Returns the result of `func`.
 */
function apply(func, thisArg, args) ***REMOVED***
  switch (args.length) ***REMOVED***
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  ***REMOVED***
  return func.apply(thisArg, args);
***REMOVED***

module.exports = apply;
