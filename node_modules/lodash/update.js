var baseUpdate = require('./_baseUpdate'),
    castFunction = require('./_castFunction');

/**
 * This method is like `_.set` except that accepts `updater` to produce the
 * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
 * is invoked with one argument: (value).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param ***REMOVED***Object***REMOVED*** object The object to modify.
 * @param ***REMOVED***Array|string***REMOVED*** path The path of the property to set.
 * @param ***REMOVED***Function***REMOVED*** updater The function to produce the updated value.
 * @returns ***REMOVED***Object***REMOVED*** Returns `object`.
 * @example
 *
 * var object = ***REMOVED*** 'a': [***REMOVED*** 'b': ***REMOVED*** 'c': 3 ***REMOVED*** ***REMOVED***] ***REMOVED***;
 *
 * _.update(object, 'a[0].b.c', function(n) ***REMOVED*** return n * n; ***REMOVED***);
 * console.log(object.a[0].b.c);
 * // => 9
 *
 * _.update(object, 'x[0].y.z', function(n) ***REMOVED*** return n ? n + 1 : 0; ***REMOVED***);
 * console.log(object.x[0].y.z);
 * // => 0
 */
function update(object, path, updater) ***REMOVED***
  return object == null ? object : baseUpdate(object, path, castFunction(updater));
***REMOVED***

module.exports = update;
