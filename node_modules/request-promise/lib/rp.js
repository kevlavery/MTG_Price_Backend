'use strict';

var Bluebird = require('bluebird').getNewLibraryCopy(),
    configure = require('request-promise-core/configure/request2'),
    stealthyRequire = require('stealthy-require');

try ***REMOVED***

    // Load Request freshly - so that users can require an unaltered request instance!
    var request = stealthyRequire(require.cache, function () ***REMOVED***
        return require('request');
    ***REMOVED***,
    function () ***REMOVED***
        require('tough-cookie');
    ***REMOVED***, module);

***REMOVED*** catch (err) ***REMOVED***
    /* istanbul ignore next */
    var EOL = require('os').EOL;
    /* istanbul ignore next */
    console.error(EOL + '###' + EOL + '### The "request" library is not installed automatically anymore.' + EOL + '### But required by "request-promise".' + EOL + '###' + EOL + '### npm install request --save' + EOL + '###' + EOL);
    /* istanbul ignore next */
    throw err;
***REMOVED***

Bluebird.config(***REMOVED***cancellation: true***REMOVED***);

configure(***REMOVED***
    request: request,
    PromiseImpl: Bluebird,
    expose: [
        'then',
        'catch',
        'finally',
        'cancel',
        'promise'
        // Would you like to expose more Bluebird methods? Try e.g. `rp(...).promise().tap(...)` first. `.promise()` returns the full-fledged Bluebird promise.
    ],
    constructorMixin: function (resolve, reject, onCancel) ***REMOVED***
        var self = this;
        onCancel(function () ***REMOVED***
            self.abort();
        ***REMOVED***);
    ***REMOVED***
***REMOVED***);

request.bindCLS = function RP$bindCLS() ***REMOVED***
    throw new Error('CLS support was dropped. To get it back read: https://github.com/request/request-promise/wiki/Getting-Back-Support-for-Continuation-Local-Storage');
***REMOVED***;


module.exports = request;
